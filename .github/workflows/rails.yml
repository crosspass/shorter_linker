---
###########################
###########################
## Linter GitHub Actions ##
###########################
###########################
name: Lint Code Base

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

#############################
# Start the job on all push #
#############################
on:
  push:
    branches-ignore: [master]
    # Remove the line above to run when pushing to master
  pull_request:
    branches: [master]

###############
# Set the Job #
###############
jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
     ##########################
     # Checkout the code base #
     ##########################
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

     ################################
     # Run Linter against code base #
     ################################
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_RUBY: true
          VALIDATE_CSS: true
          VALIDATE_JAVASCRIPT_ES: true
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: rails_github_actions
          POSTGRES_DB: rails_github_actions_test
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps: 
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt-get -yqq install libpq-dev build-essential libcurl4-openssl-dev
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Set up Node
        uses: actions/setup-node@v1
      - name: Install dependencies
        run: bundle install
      - name: Install yarn
        run: yarn install
      - name: Setup test database
        env:
         RAILS_ENV: test
         PGHOST: localhost
         POSTGRES_DB: rails_github_actions_test
         POSTGRES_USER: rails_github_actions
         POSTGRES_PASSWORD: postgres
        run: |
          cp config/database.ci.yml config/database.yml
          rake db:create db:setup
      - name: Run tests
        env:
          PGHOST: localhost
          POSTGRES_DB: rails_github_actions_test
          POSTGRES_USER: rails_github_actions
          POSTGRES_PASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_ENV: test
        run: bundle exec rspec
      - name: Upload Code Coverage
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage/